<?php
/**
 * @file
 * Code for the Lightning Collaborate feature.
 */

include_once 'lightning_collaborate.features.inc';

/**
 * Implements hook_menu_local_tasks_alter().
 */
function lightning_collaborate_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // Add action link to 'node/add' on 'admin/content' page.
  if ($root_path == 'admin/workbench/collaborate') {
    $item = menu_get_item('task/add');
    if ($item['access']) {
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
    }
  }
}

/**
 * Implements hook_block_info().
 */
function lightning_collaborate_block_info() {
  $block = array('lightning_collaborate_statuses' => array());
  $block['lightning_collaborate_statuses']['info'] = t('Share a status');
  return $block;
}

/**
 * Implements hook_block_view().
 */
function lightning_collaborate_block_view($delta) {
    $block['subject'] = '';
    $block['content'] = drupal_get_form('message_ui_instance_message_manage', 'status_update');
    //$block['content'] = theme('statuses_form_display', array('recipient' => $GLOBALS['user'], 'type' => 'user'));
    return $block;
}

/**
 * Implements hook_form_alter().
 *
 * Remove unnecessary from fields from a status update form via Message UI module.
 */
function lightning_collaborate_form_alter(&$form, &$form_state, $form_id) {
  if($form_id === 'message_ui_instance_message_manage' ) {
    unset($form['text']);
    unset($form['actions']['cancel']);
    $form['owner']['#access'] = FALSE;
    $form['actions']['submit']['#submit'][] = 'lightning_collaborate_message_redirect';
  }
}

function lightning_collaborate_message_redirect(&$form, &$form_state) {
  $form_state['redirect'] = 'admin/workbench/collaborate';
}

/**
 * Implements of hook_preprocess_views_view_table().
 *
 *
 */
function lightning_collaborate_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];

  // TODO: This can be removed when the following lands:
  // https://www.drupal.org/node/2362767 - Even custom output buttons in Views
  // should have links 
  // Manually force custom task links to include an AJAX call to complete
  if (($view->name == 'collaborate_tasks') && $variables['field']->definition['handler'] == 'task_handler_field_task_completed') {
     ctools_include('ajax');
     $variables['output'] =  $variables['row']->task_completed ? ctools_ajax_text_button(filter_xss_admin($variables['field']->options['type_custom_true']), "task/ajax/complete/nojs/" . $variables['row']->tid, t('Complete task')) : ctools_ajax_text_button(filter_xss_admin($variables['field']->options['type_custom_false']), "task/ajax/complete/nojs/" . $variables['row']->tid, t('Complete task'));
  }


  // This is done to convert the "type" field to a thumbnail for image files and
  // users that don't have a picture uploaded.
  if (($view->name == 'editorial_notifications' || $view->name == 'collaborate_tasks') && $variables['field']->definition['handler'] == 'views_handler_field_user_picture') {
    if (empty($variables['output'])) {
      // We could put the default picture here
      if (!empty($variables['row']->users_task_uid)) {
        $uid = $variables['row']->users_task_uid;
      } elseif (!empty($variables['row']->users_message_uid)) {
        $uid = $variables['row']->users_message_uid;
      } else {
        $uid = 0;
      }
      $image_html = theme('image', array(
            'path' => drupal_get_path('module', 'workbench') . '/images/profile_default.png',
            'attributes' => array(
              'width' => '70px',
              ),
            ));

      $variables['output'] = l($image_html, 'user/' . $uid, array('html' => TRUE));
    }
  }
}

/**
 * Implements hook_page_alter().
 *
 * Add required CSS styles to our page
 */
function lightning_collaborate_page_alter(&$page) {
  if (current_path() == 'admin/workbench/collaborate') {
    $page['content']['#attached'] = array(
      'css' => array(drupal_get_path('module', 'lightning_collaborate') . '/css/lightning_collaborate.styles.css'),
    );
  }
}
